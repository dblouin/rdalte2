/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package fr.openpeople.rdal2.model.rdal.provider;

import fr.openpeople.rdal2.model.rdal.util.RdalAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RdalItemProviderAdapterFactory extends RdalAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RdalItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.RequirementRefinement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementRefinementItemProvider requirementRefinementItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.RequirementRefinement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementRefinementAdapter() {
		if (requirementRefinementItemProvider == null) {
			requirementRefinementItemProvider = new RequirementRefinementItemProvider(this);
		}

		return requirementRefinementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.GoalRefinement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GoalRefinementItemProvider goalRefinementItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.GoalRefinement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGoalRefinementAdapter() {
		if (goalRefinementItemProvider == null) {
			goalRefinementItemProvider = new GoalRefinementItemProvider(this);
		}

		return goalRefinementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.ContactInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContactInformationItemProvider contactInformationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.ContactInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContactInformationAdapter() {
		if (contactInformationItemProvider == null) {
			contactInformationItemProvider = new ContactInformationItemProvider(this);
		}

		return contactInformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Stakeholder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StakeholderItemProvider stakeholderItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Stakeholder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStakeholderAdapter() {
		if (stakeholderItemProvider == null) {
			stakeholderItemProvider = new StakeholderItemProvider(this);
		}

		return stakeholderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Rationale} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RationaleItemProvider rationaleItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Rationale}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRationaleAdapter() {
		if (rationaleItemProvider == null) {
			rationaleItemProvider = new RationaleItemProvider(this);
		}

		return rationaleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Uncertainty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UncertaintyItemProvider uncertaintyItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Uncertainty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUncertaintyAdapter() {
		if (uncertaintyItemProvider == null) {
			uncertaintyItemProvider = new UncertaintyItemProvider(this);
		}

		return uncertaintyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Specification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecificationItemProvider specificationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Specification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecificationAdapter() {
		if (specificationItemProvider == null) {
			specificationItemProvider = new SpecificationItemProvider(this);
		}

		return specificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.RequirementsPackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementsPackageItemProvider requirementsPackageItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.RequirementsPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementsPackageAdapter() {
		if (requirementsPackageItemProvider == null) {
			requirementsPackageItemProvider = new RequirementsPackageItemProvider(this);
		}

		return requirementsPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.GoalsPackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GoalsPackageItemProvider goalsPackageItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.GoalsPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGoalsPackageAdapter() {
		if (goalsPackageItemProvider == null) {
			goalsPackageItemProvider = new GoalsPackageItemProvider(this);
		}

		return goalsPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.SystemOverview} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemOverviewItemProvider systemOverviewItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.SystemOverview}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemOverviewAdapter() {
		if (systemOverviewItemProvider == null) {
			systemOverviewItemProvider = new SystemOverviewItemProvider(this);
		}

		return systemOverviewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Capability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityItemProvider capabilityItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Capability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityAdapter() {
		if (capabilityItemProvider == null) {
			capabilityItemProvider = new CapabilityItemProvider(this);
		}

		return capabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.SystemContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemContextItemProvider systemContextItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.SystemContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemContextAdapter() {
		if (systemContextItemProvider == null) {
			systemContextItemProvider = new SystemContextItemProvider(this);
		}

		return systemContextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Variable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableItemProvider variableItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Variable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAdapter() {
		if (variableItemProvider == null) {
			variableItemProvider = new VariableItemProvider(this);
		}

		return variableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.InteractionVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InteractionVariableItemProvider interactionVariableItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.InteractionVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInteractionVariableAdapter() {
		if (interactionVariableItemProvider == null) {
			interactionVariableItemProvider = new InteractionVariableItemProvider(this);
		}

		return interactionVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.ActorReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActorReferenceItemProvider actorReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.ActorReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActorReferenceAdapter() {
		if (actorReferenceItemProvider == null) {
			actorReferenceItemProvider = new ActorReferenceItemProvider(this);
		}

		return actorReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.VerificationActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerificationActivityItemProvider verificationActivityItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.VerificationActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerificationActivityAdapter() {
		if (verificationActivityItemProvider == null) {
			verificationActivityItemProvider = new VerificationActivityItemProvider(this);
		}

		return verificationActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Requirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementItemProvider requirementItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Requirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementAdapter() {
		if (requirementItemProvider == null) {
			requirementItemProvider = new RequirementItemProvider(this);
		}

		return requirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Assumption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssumptionItemProvider assumptionItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Assumption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssumptionAdapter() {
		if (assumptionItemProvider == null) {
			assumptionItemProvider = new AssumptionItemProvider(this);
		}

		return assumptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.SystemFunctionGoal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemFunctionGoalItemProvider systemFunctionGoalItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.SystemFunctionGoal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemFunctionGoalAdapter() {
		if (systemFunctionGoalItemProvider == null) {
			systemFunctionGoalItemProvider = new SystemFunctionGoalItemProvider(this);
		}

		return systemFunctionGoalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.NonFunctionalGoal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NonFunctionalGoalItemProvider nonFunctionalGoalItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.NonFunctionalGoal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNonFunctionalGoalAdapter() {
		if (nonFunctionalGoalItemProvider == null) {
			nonFunctionalGoalItemProvider = new NonFunctionalGoalItemProvider(this);
		}

		return nonFunctionalGoalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.QualityObjective} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QualityObjectiveItemProvider qualityObjectiveItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.QualityObjective}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQualityObjectiveAdapter() {
		if (qualityObjectiveItemProvider == null) {
			qualityObjectiveItemProvider = new QualityObjectiveItemProvider(this);
		}

		return qualityObjectiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Conflict} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConflictItemProvider conflictItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Conflict}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConflictAdapter() {
		if (conflictItemProvider == null) {
			conflictItemProvider = new ConflictItemProvider(this);
		}

		return conflictItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.DesignElementReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DesignElementReferenceItemProvider designElementReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.DesignElementReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDesignElementReferenceAdapter() {
		if (designElementReferenceItemProvider == null) {
			designElementReferenceItemProvider = new DesignElementReferenceItemProvider(this);
		}

		return designElementReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.VerifiableDesignElementRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerifiableDesignElementRefItemProvider verifiableDesignElementRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.VerifiableDesignElementRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerifiableDesignElementRefAdapter() {
		if (verifiableDesignElementRefItemProvider == null) {
			verifiableDesignElementRefItemProvider = new VerifiableDesignElementRefItemProvider(this);
		}

		return verifiableDesignElementRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.SatisfiableDesignElementRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SatisfiableDesignElementRefItemProvider satisfiableDesignElementRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.SatisfiableDesignElementRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSatisfiableDesignElementRefAdapter() {
		if (satisfiableDesignElementRefItemProvider == null) {
			satisfiableDesignElementRefItemProvider = new SatisfiableDesignElementRefItemProvider(this);
		}

		return satisfiableDesignElementRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.PrioritizedSatDesignElementRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrioritizedSatDesignElementRefItemProvider prioritizedSatDesignElementRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.PrioritizedSatDesignElementRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrioritizedSatDesignElementRefAdapter() {
		if (prioritizedSatDesignElementRefItemProvider == null) {
			prioritizedSatDesignElementRefItemProvider = new PrioritizedSatDesignElementRefItemProvider(this);
		}

		return prioritizedSatDesignElementRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.SystOverviewDesignElemRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystOverviewDesignElemRefItemProvider systOverviewDesignElemRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.SystOverviewDesignElemRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystOverviewDesignElemRefAdapter() {
		if (systOverviewDesignElemRefItemProvider == null) {
			systOverviewDesignElemRefItemProvider = new SystOverviewDesignElemRefItemProvider(this);
		}

		return systOverviewDesignElemRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.SystContextDesignElemRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystContextDesignElemRefItemProvider systContextDesignElemRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.SystContextDesignElemRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystContextDesignElemRefAdapter() {
		if (systContextDesignElemRefItemProvider == null) {
			systContextDesignElemRefItemProvider = new SystContextDesignElemRefItemProvider(this);
		}

		return systContextDesignElemRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.RefManuallySelectedDesignElements} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RefManuallySelectedDesignElementsItemProvider refManuallySelectedDesignElementsItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.RefManuallySelectedDesignElements}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRefManuallySelectedDesignElementsAdapter() {
		if (refManuallySelectedDesignElementsItemProvider == null) {
			refManuallySelectedDesignElementsItemProvider = new RefManuallySelectedDesignElementsItemProvider(this);
		}

		return refManuallySelectedDesignElementsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.RefQueryCollectedDesignElements} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RefQueryCollectedDesignElementsItemProvider refQueryCollectedDesignElementsItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.RefQueryCollectedDesignElements}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRefQueryCollectedDesignElementsAdapter() {
		if (refQueryCollectedDesignElementsItemProvider == null) {
			refQueryCollectedDesignElementsItemProvider = new RefQueryCollectedDesignElementsItemProvider(this);
		}

		return refQueryCollectedDesignElementsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.TraceDesignElementRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TraceDesignElementRefItemProvider traceDesignElementRefItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.TraceDesignElementRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTraceDesignElementRefAdapter() {
		if (traceDesignElementRefItemProvider == null) {
			traceDesignElementRefItemProvider = new TraceDesignElementRefItemProvider(this);
		}

		return traceDesignElementRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Trace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TraceItemProvider traceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Trace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTraceAdapter() {
		if (traceItemProvider == null) {
			traceItemProvider = new TraceItemProvider(this);
		}

		return traceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.RequirementsCoverageData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementsCoverageDataItemProvider requirementsCoverageDataItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.RequirementsCoverageData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementsCoverageDataAdapter() {
		if (requirementsCoverageDataItemProvider == null) {
			requirementsCoverageDataItemProvider = new RequirementsCoverageDataItemProvider(this);
		}

		return requirementsCoverageDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.NonFunctionalProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NonFunctionalPropertyItemProvider nonFunctionalPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.NonFunctionalProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNonFunctionalPropertyAdapter() {
		if (nonFunctionalPropertyItemProvider == null) {
			nonFunctionalPropertyItemProvider = new NonFunctionalPropertyItemProvider(this);
		}

		return nonFunctionalPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.Sensitivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SensitivityItemProvider sensitivityItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.Sensitivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSensitivityAdapter() {
		if (sensitivityItemProvider == null) {
			sensitivityItemProvider = new SensitivityItemProvider(this);
		}

		return sensitivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.SubRequirementReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubRequirementReferenceItemProvider subRequirementReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.SubRequirementReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubRequirementReferenceAdapter() {
		if (subRequirementReferenceItemProvider == null) {
			subRequirementReferenceItemProvider = new SubRequirementReferenceItemProvider(this);
		}

		return subRequirementReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.SubGoalReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubGoalReferenceItemProvider subGoalReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.SubGoalReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubGoalReferenceAdapter() {
		if (subGoalReferenceItemProvider == null) {
			subGoalReferenceItemProvider = new SubGoalReferenceItemProvider(this);
		}

		return subGoalReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.openpeople.rdal2.model.rdal.UserProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserPropertyItemProvider userPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link fr.openpeople.rdal2.model.rdal.UserProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserPropertyAdapter() {
		if (userPropertyItemProvider == null) {
			userPropertyItemProvider = new UserPropertyItemProvider(this);
		}

		return userPropertyItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (requirementRefinementItemProvider != null) requirementRefinementItemProvider.dispose();
		if (goalRefinementItemProvider != null) goalRefinementItemProvider.dispose();
		if (contactInformationItemProvider != null) contactInformationItemProvider.dispose();
		if (stakeholderItemProvider != null) stakeholderItemProvider.dispose();
		if (rationaleItemProvider != null) rationaleItemProvider.dispose();
		if (uncertaintyItemProvider != null) uncertaintyItemProvider.dispose();
		if (specificationItemProvider != null) specificationItemProvider.dispose();
		if (requirementsPackageItemProvider != null) requirementsPackageItemProvider.dispose();
		if (goalsPackageItemProvider != null) goalsPackageItemProvider.dispose();
		if (systemOverviewItemProvider != null) systemOverviewItemProvider.dispose();
		if (capabilityItemProvider != null) capabilityItemProvider.dispose();
		if (systemContextItemProvider != null) systemContextItemProvider.dispose();
		if (variableItemProvider != null) variableItemProvider.dispose();
		if (interactionVariableItemProvider != null) interactionVariableItemProvider.dispose();
		if (actorReferenceItemProvider != null) actorReferenceItemProvider.dispose();
		if (verificationActivityItemProvider != null) verificationActivityItemProvider.dispose();
		if (requirementItemProvider != null) requirementItemProvider.dispose();
		if (assumptionItemProvider != null) assumptionItemProvider.dispose();
		if (systemFunctionGoalItemProvider != null) systemFunctionGoalItemProvider.dispose();
		if (nonFunctionalGoalItemProvider != null) nonFunctionalGoalItemProvider.dispose();
		if (qualityObjectiveItemProvider != null) qualityObjectiveItemProvider.dispose();
		if (conflictItemProvider != null) conflictItemProvider.dispose();
		if (designElementReferenceItemProvider != null) designElementReferenceItemProvider.dispose();
		if (verifiableDesignElementRefItemProvider != null) verifiableDesignElementRefItemProvider.dispose();
		if (satisfiableDesignElementRefItemProvider != null) satisfiableDesignElementRefItemProvider.dispose();
		if (prioritizedSatDesignElementRefItemProvider != null) prioritizedSatDesignElementRefItemProvider.dispose();
		if (systOverviewDesignElemRefItemProvider != null) systOverviewDesignElemRefItemProvider.dispose();
		if (systContextDesignElemRefItemProvider != null) systContextDesignElemRefItemProvider.dispose();
		if (refManuallySelectedDesignElementsItemProvider != null) refManuallySelectedDesignElementsItemProvider.dispose();
		if (refQueryCollectedDesignElementsItemProvider != null) refQueryCollectedDesignElementsItemProvider.dispose();
		if (traceDesignElementRefItemProvider != null) traceDesignElementRefItemProvider.dispose();
		if (traceItemProvider != null) traceItemProvider.dispose();
		if (requirementsCoverageDataItemProvider != null) requirementsCoverageDataItemProvider.dispose();
		if (nonFunctionalPropertyItemProvider != null) nonFunctionalPropertyItemProvider.dispose();
		if (sensitivityItemProvider != null) sensitivityItemProvider.dispose();
		if (subRequirementReferenceItemProvider != null) subRequirementReferenceItemProvider.dispose();
		if (subGoalReferenceItemProvider != null) subGoalReferenceItemProvider.dispose();
		if (userPropertyItemProvider != null) userPropertyItemProvider.dispose();
	}

}
